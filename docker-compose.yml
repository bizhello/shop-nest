version: '3.7'

services:
  main:
    container_name: main
    build:
      dockerfile: Dockerfile
      context: .
      target: development
    volumes:
      - .:/usr/src/app
      # - /usr/src/app/node_modules
    ports:
      # - ${SERVER_PORT}:${SERVER_PORT}
      - 8000:8000
    command: npm run start:dev
    env_file:
      - .env
    # networks:
    #   - webnet
    depends_on:
        - mongo
        - mongo-express
  #     - redis
  #     - postgres
  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_DATABASE: ${DATABASE_MONGO}
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - /home/angelo/mongodata:/data/db

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
  # redis:
  #   container_name: redis
  #   image: redis:5
  #   networks:
  #     - webnet
  # postgres:
  #   container_name: postgres
  #   image: postgres:12
  #   networks:
  #     - webnet
  #   environment:
  #     POSTGRES_PASSWORD: ${DB_PASSWORD}
  #     POSTGRES_USER: ${DB_USERNAME}
  #     POSTGRES_DB: ${DB_DATABASE_NAME}
  #     PG_DATA: /var/lib/postgresql/data
  #   ports:
  #     - 5432:5432
  #   volumes:
  #     - pgdata:/var/lib/postgresql/data

# networks:
#   webnet:

# volumes:
#   pgdata: